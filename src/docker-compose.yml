#
# Copyright (C) 2024 Intel Corporation.
#
# SPDX-License-Identifier: Apache-2.0
#


 ## Current Developer Toolbox doesn't support environment files, make sure to remove any files or environment variables starting with $
version: '3.7'
services:
  camera-simulator:
    container_name: camera-simulator
    image: aler9/rtsp-simple-server
    ports:
      - "127.0.0.1:8554:8554"
    network_mode: "host"
  camera-simulator0:
    image: jrottenberg/ffmpeg:4.1-alpine
    container_name: camera-simulator0
    network_mode: "host"
    entrypoint: ["/bin/sh","-c"]
    command: 
    - | 
       if [ ! -f /home/pipeline-server/sample-media/coca-cola-4465029-1920-15-bench.mp4 ]; then
          mkdir -p /home/pipeline-server/sample-media
          wget -O /home/pipeline-server/sample-media/coca-cola-4465029-1920-15-bench.mp4 https://www.pexels.com/download/video/4465029
       fi
       ffmpeg -nostdin -re -stream_loop -1 -i /home/pipeline-server/sample-media/coca-cola-4465029-1920-15-bench.mp4 -c copy -f rtsp -rtsp_transport tcp rtsp://localhost:8554/camera_0
    depends_on:
      - camera-simulator
    volumes:
      - ${RETAIL_USE_CASE_ROOT:-..}/performance-tools/sample-media:/home/pipeline-server/sample-media

  OvmsClientGst:
    image: dlstreamer:dev
    deploy:
      mode: replicated
      replicas: ${PIPELINE_COUNT:-1}
    network_mode: "host"
    entrypoint: /script/entrypoint.sh --pipeline_script_choice ${PIPELINE_SCRIPT:-yolov8s_roi.sh}
    privileged: true
    ipc: "host"
    env_file:
      - ./res/gst.env
      - ${DEVICE_ENV:-res/all-cpu.env}
    environment:
      - CONTAINER_NAME="gst0"
      - INPUTSRC=${INPUTSRC:-rtsp://localhost:8554/camera_0}
      - RENDER_MODE=${RENDER_MODE:-0} #RENDER_MODE=1 will work only after running xhost +local:docker      
      - RTSP=${RTSP:-0}
      - DISPLAY=$DISPLAY
      - HTTP_PROXY
      - HTTPS_PROXY
      - NO_PROXY
    volumes:
      - ${RESULTS_DIR:-../results}:/tmp/results
      - ~/.Xauthority:/home/dlstreamer/.Xauthority
      - /tmp/.X11-unix
      - ~/.cl-cache:/home/pipeline-server/.cl-cache
      - ./res/:/home/pipeline-server/envs
      - ${RETAIL_USE_CASE_ROOT:-..}/models:/home/pipeline-server/models
      - ./pipelines/:/home/pipeline-server/pipelines
      - ./extensions/:/home/pipeline-server/extensions
    depends_on:
      - camera-simulator

  mosquitto:
    image: eclipse-mosquitto:2.0    
    network_mode: "host"
    ports:
      - "127.0.0.1:1883:1883"
    depends_on:
      - OvmsClientGst    
  
  loss-prevention:
    image: loss-prevention:dev
    network_mode: "host"
    environment:
      - MQTT_URL=127.0.0.1
      - MQTT_PORT=1883
      - MQTT_TOPIC=event/detection
      - ROI_NAME=BASKET,BAGGING
    restart: always
    depends_on:
      - mosquitto
  grafana:
    image: grafana/grafana:11.3.0-security-01    
    environment:
      - HTTP_PROXY
      - HTTPS_PROXY
      - NO_PROXY
      - GF_INSTALL_PLUGINS=yesoreyeram-infinity-datasource
      - GF_DASHBOARDS_MIN_REFRESH_INTERVAL=1s
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    network_mode: "host"
    volumes:
      - ./grafana/provisioning/dashboard-actual/:/dashboards/
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
  go2rtc:
    image: alexxit/go2rtc
    container_name: go2rtc
    network_mode: "host"           
    volumes:
      - ./go2rtc:/config
  
  lp-scale:
    image: lp-scale:dev
    network_mode: "host"
    privileged: true
    environment:
      - MQTT_URL=127.0.0.1
      - MQTT_PORT=1883
      - MQTT_TOPIC=event/scale
    restart: unless-stopped
    depends_on:
      - mosquitto
